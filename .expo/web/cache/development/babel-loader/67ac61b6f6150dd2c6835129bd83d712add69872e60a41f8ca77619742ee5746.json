{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction TelaInicial() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Sabia que \\xE9 o meu primeiro app do React Native? :)\"\n    }), _jsx(Button, {\n      title: \"Cadastrar\",\n      onPress: function onPress() {\n        navigation.navigate('Cadastro');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaCadastro() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"essa \\xE9 a segunda tela!\"\n    }), _jsx(Text, {\n      children: \"aqui faz o cadastro\"\n    }), _jsx(Button, {\n      title: \"esqueceu senha\",\n      onPress: function onPress() {\n        navigation.navigate('esqueceuSenha');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaEsqueceuSenha() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Essa \\xE9 a tela de \\\"esqueci a senha\\\"\"\n    }), _jsx(Button, {\n      title: \"tela principal\",\n      onPress: function onPress() {\n        navigation.navigate('principal');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaPrincipal() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"essa \\xE9 a tela principal!\"\n    }), _jsx(Button, {\n      title: \"resenhas\",\n      onPress: function onPress() {\n        navigation.navigate('verResenhas');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaDasResenhas() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Essa \\xE9 a tela das resenhas\\\"\"\n    }), _jsx(Button, {\n      title: \" novas resenhas\",\n      onPress: function onPress() {\n        navigation.navigate('novasResenhas');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaNovasResenhas() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"essa \\xE9 a tela para escrever novas resenhas\"\n    }), _jsx(Button, {\n      title: \"perfil\",\n      onPress: function onPress() {\n        navigation.navigate('perfil');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nfunction TelaPerfil() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"essa \\xE9 a tela do perfil!\"\n    }), _jsx(Button, {\n      title: \"voltar\",\n      onPress: function onPress() {\n        navigation.navigate('Início');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"In\\xEDcio\",\n        component: TelaInicial\n      }), _jsx(Stack.Screen, {\n        name: \"esqueceuSenha\",\n        component: TelaCadastro\n      }), _jsx(Stack.Screen, {\n        name: \"principal\",\n        component: TelaEsqueceuSenha\n      }), _jsx(Stack.Screen, {\n        name: \"verResenhas\",\n        component: TelaPrincipal\n      }), _jsx(Stack.Screen, {\n        name: \"novasResenhas\",\n        component: TelaDasResenhas\n      }), _jsx(Stack.Screen, {\n        name: \"perfil\",\n        component: TelaNovasResenhas\n      }), _jsx(Stack.Screen, {\n        name: \"In\\xEDcio\",\n        component: TelaPerfil\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Button","NavigationContainer","useNavigation","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","TelaInicial","navigation","style","styles","container","children","title","onPress","navigate","TelaCadastro","TelaEsqueceuSenha","TelaPrincipal","TelaDasResenhas","TelaNovasResenhas","TelaPerfil","App","Stack","Navigator","Screen","name","component","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/aluno/Documentos/brunagit/PPDM-bruna/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button} from 'react-native';\nimport { NavigationContainer, useNavigation} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction TelaInicial(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Sabia que é o meu primeiro app do React Native? :)</Text>\n      <Button title=\"Cadastrar\" onPress={()=>{\n        navigation.navigate ('Cadastro')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaCadastro(){\n  return (\n    <View style={styles.container}>\n      <Text>essa é a segunda tela!</Text>\n      <Text>aqui faz o cadastro</Text>\n      <Button title=\"esqueceu senha\" onPress={()=>{\n        navigation.navigate ('esqueceuSenha')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaEsqueceuSenha(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Essa é a tela de \"esqueci a senha\"</Text>\n      <Button title=\"tela principal\" onPress={()=>{\n        navigation.navigate ('principal')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaPrincipal(){\n  return (\n    <View style={styles.container}>\n      <Text>essa é a tela principal!</Text>\n      <Button title=\"resenhas\" onPress={()=>{\n        navigation.navigate ('verResenhas')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaDasResenhas(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Essa é a tela das resenhas\"</Text>\n      <Button title=\" novas resenhas\" onPress={()=>{\n        navigation.navigate ('novasResenhas')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaNovasResenhas(){\n  return (\n    <View style={styles.container}>\n      <Text>essa é a tela para escrever novas resenhas</Text>\n      <Button title=\"perfil\" onPress={()=>{\n        navigation.navigate ('perfil')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction TelaPerfil(){\n  return (\n    <View style={styles.container}>\n      <Text>essa é a tela do perfil!</Text>\n      <Button title=\"voltar\" onPress={()=>{\n        navigation.navigate ('Início')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\n\nexport default function App() {\n  const Stack = createNativeStackNavigator()\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Início\" component={TelaInicial} />\n        <Stack.Screen name=\"esqueceuSenha\" component={TelaCadastro} />\n        <Stack.Screen name=\"principal\" component={TelaEsqueceuSenha} />\n        <Stack.Screen name=\"verResenhas\" component={TelaPrincipal} />\n        <Stack.Screen name=\"novasResenhas\" component={TelaDasResenhas} />\n        <Stack.Screen name=\"perfil\" component={TelaNovasResenhas} />\n        <Stack.Screen name=\"Início\" component={TelaPerfil} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}