{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer, useNavegation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction TelaInicial() {\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Estou cursando o terceiro ano de inform\\xE1tica!\"\n    }), _jsx(Text, {\n      children: \"Sabia que \\xE9 o meu primeiro app do React Native? :)\"\n    }), _jsx(Button, {\n      title: \"Cadastrar\",\n      onPress: function onPress() {\n        navigation.navigate('Cadastro');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"In\\xEDcio\",\n        component: TelaInicial\n      }), _jsx(Stack.Screen, {\n        name: \"Cadastro\",\n        component: TelaCadastro\n      })]\n    })\n  });\n}\nfunction TelaCadastro() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"essa \\xE9 a segunda tela!\"\n    }), _jsx(Text, {\n      children: \"aqui faz o cadastro\"\n    }), _jsx(Button, {\n      title: \"Voltar\",\n      onPress: function onPress() {\n        navigation.navigate('Início');\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Button","NavigationContainer","useNavegation","createNativeStackNavigator","jsx","_jsx","jsxs","_jsxs","TelaInicial","navigation","useNavigation","style","styles","container","children","title","onPress","navigate","App","Stack","Navigator","Screen","name","component","TelaCadastro","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/aluno/Documentos/PPDM-bruna/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button} from 'react-native';\nimport { NavigationContainer, useNavegation} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nfunction TelaInicial(){\n  const navigation = useNavigation();\n  return (\n    <View style={styles.container}>\n      <Text>Estou cursando o terceiro ano de informática!</Text>\n      <Text>Sabia que é o meu primeiro app do React Native? :)</Text>\n      <Button title=\"Cadastrar\" onPress={()=>{\n        navigation.navigate ('Cadastro')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nexport default function App() {\n  const Stack = createNativeStackNavigator()\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Início\" component={TelaInicial} />\n        <Stack.Screen name=\"Cadastro\" component={TelaCadastro} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n\n}\n\nfunction TelaCadastro(){\n  return (\n    <View style={styles.container}>\n      <Text>essa é a segunda tela!</Text>\n      <Text>aqui faz o cadastro</Text>\n      <Button title=\"Voltar\" onPress={()=>{\n        navigation.navigate ('Início')\n      }}></Button>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE5C,SAASC,mBAAmB,EAAEC,aAAa,QAAO,0BAA0B;AAC5E,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5E,SAASC,WAAWA,CAAA,EAAE;EACpB,IAAMC,UAAU,GAAGC,aAAa,CAAC,CAAC;EAClC,OACEH,KAAA,CAACR,IAAI;IAACY,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BT,IAAA,CAACP,IAAI;MAAAgB,QAAA,EAAC;IAA6C,CAAM,CAAC,EAC1DT,IAAA,CAACP,IAAI;MAAAgB,QAAA,EAAC;IAAkD,CAAM,CAAC,EAC/DT,IAAA,CAACL,MAAM;MAACe,KAAK,EAAC,WAAW;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAI;QACrCP,UAAU,CAACQ,QAAQ,CAAE,UAAU,CAAC;MAClC;IAAE,CAAS,CAAC,EACZZ,IAAA,CAACT,SAAS;MAACe,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAEA,eAAe,SAASO,GAAGA,CAAA,EAAG;EAC5B,IAAMC,KAAK,GAAGhB,0BAA0B,CAAC,CAAC;EAC1C,OACEE,IAAA,CAACJ,mBAAmB;IAAAa,QAAA,EAClBP,KAAA,CAACY,KAAK,CAACC,SAAS;MAAAN,QAAA,GACdT,IAAA,CAACc,KAAK,CAACE,MAAM;QAACC,IAAI,EAAC,WAAQ;QAACC,SAAS,EAAEf;MAAY,CAAE,CAAC,EACtDH,IAAA,CAACc,KAAK,CAACE,MAAM;QAACC,IAAI,EAAC,UAAU;QAACC,SAAS,EAAEC;MAAa,CAAE,CAAC;IAAA,CAC1C;EAAC,CACC,CAAC;AAG1B;AAEA,SAASA,YAAYA,CAAA,EAAE;EACrB,OACEjB,KAAA,CAACR,IAAI;IAACY,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BT,IAAA,CAACP,IAAI;MAAAgB,QAAA,EAAC;IAAsB,CAAM,CAAC,EACnCT,IAAA,CAACP,IAAI;MAAAgB,QAAA,EAAC;IAAmB,CAAM,CAAC,EAChCT,IAAA,CAACL,MAAM;MAACe,KAAK,EAAC,QAAQ;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAI;QAClCP,UAAU,CAACQ,QAAQ,CAAE,QAAQ,CAAC;MAChC;IAAE,CAAS,CAAC,EACZZ,IAAA,CAACT,SAAS;MAACe,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACtB,CAAC;AAEX;AAGA,IAAMC,MAAM,GAAGf,UAAU,CAAC4B,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}